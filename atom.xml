<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张洪伟的个人博客</title>
  
  <subtitle>Zhang Hongwei&#39;s Personal Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhanghw.win/"/>
  <updated>2019-05-01T07:15:17.998Z</updated>
  <id>http://zhanghw.win/</id>
  
  <author>
    <name>Zhang Hongwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端学习资料</title>
    <link href="http://zhanghw.win/2018/05/27/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <id>http://zhanghw.win/2018/05/27/前端学习资料/</id>
    <published>2018-05-27T06:53:36.000Z</published>
    <updated>2019-05-01T07:15:17.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><ol><li><a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">w3school</a></li><li><a href="https://item.jd.com/11332506.html" target="_blank" rel="noopener">《Head First HTML与CSS》</a></li><li><a href="https://item.jd.com/11019625.html" target="_blank" rel="noopener">《锋利的jQuery》</a></li><li><a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="noopener">chrome Devtools</a>: 先学会简单的查看元素，源码调试</li></ol><p>学了这些基本上做些简单网站是没问题了，有点开发体验之后想要在前端继续发展下去，要注重知识体系和基础了<br><a id="more"></a></p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ol><li><a href="http://nec.netease.com/" target="_blank" rel="noopener">网易nec</a></li><li><a href="https://item.jd.com/10064452.html" target="_blank" rel="noopener">《精通CSS：高级Web标准解决方案》</a>：实践</li><li><a href="https://item.jd.com/10100250.html" target="_blank" rel="noopener">《CSS权威指南》</a>: 全面，权威，通往高级必备</li><li><a href="https://item.jd.com/11911279.html" target="_blank" rel="noopener">《CSS揭秘》</a></li></ol><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><ol><li><a href="https://item.jd.com/10951037.html" target="_blank" rel="noopener">《JavaScript高级程序设计》</a>：俗称红宝书，经典全面</li><li><a href="https://item.jd.com/10974436.html" target="_blank" rel="noopener">《JavaScript权威指南》</a>：最权威的JS书籍，工具书</li></ol><h2 id="Web性能"><a href="#Web性能" class="headerlink" title="Web性能"></a>Web性能</h2><ol><li><a href="https://item.jd.com/11688195.html" target="_blank" rel="noopener">《高性能网站建设指南：前端工程师技能精髓》</a></li><li><a href="https://item.jd.com/11691824.html" target="_blank" rel="noopener">《高性能网站建设进阶指南：Web开发者性能优化最佳实践》</a></li><li><a href="https://item.jd.com/11444582.html" target="_blank" rel="noopener">《Web性能权威指南》</a></li></ol><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><ol><li><a href="https://item.jd.com/11449491.html" target="_blank" rel="noopener">《图解HTTP》</a>：基础，有很多插图</li><li><a href="https://item.jd.com/11056556.html" target="_blank" rel="noopener">《HTTP权威指南》</a></li></ol><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ol><li><a href="https://item.jd.com/11479920.html" target="_blank" rel="noopener">《WebKit技术内幕》</a></li><li><a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="noopener">chrome Devtools</a></li></ol><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><ol><li><a href="https://item.jd.com/11358579.html" target="_blank" rel="noopener">《了不起的Node.js 将JavaScript进行到底》</a>: 入门</li><li><a href="https://item.jd.com/11355978.html" target="_blank" rel="noopener">《深入浅出Node.js》</a>: 进阶</li></ol><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><ol><li><a href="http://es6.ruanyifeng.com/#README" target="_blank" rel="noopener">《ECMAScript 6 入门》</a></li></ol><h2 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h2><ol><li><a href="https://item.jd.com/12163054.html#none" target="_blank" rel="noopener">《剑指Offer:名企面试官精讲典型编程题》</a></li><li><a href="https://item.jd.com/11144230.html" target="_blank" rel="noopener">《算法导论》</a></li></ol><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><ol><li><a href="https://item.jd.com/10057319.html" target="_blank" rel="noopener">设计模式：可复用面向对象软件的基础</a></li></ol><h2 id="网络资料"><a href="#网络资料" class="headerlink" title="网络资料"></a>网络资料</h2><ol><li><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">MDN</a></li><li><a href="http://taobaofed.org/" target="_blank" rel="noopener">淘宝前端团队(FED)</a></li><li><a href="http://fex.baidu.com/" target="_blank" rel="noopener">百度FEX前端研发部</a></li><li><a href="http://www.infoq.com/cn/" target="_blank" rel="noopener">infoQ</a></li><li><a href="https://weekly.75team.com/" target="_blank" rel="noopener">奇舞周刊</a></li><li><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">阮一峰博客</a></li><li><a href="http://www.zhangxinxu.com/" target="_blank" rel="noopener">张鑫旭博客</a></li></ol><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>看书是学习知识，提高能力的一种途径，但是最重要的是实践以及在实践过程中的思考总结，最终能够脱离书本，深刻理解整个前端的知识体系</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;入门&quot;&gt;&lt;a href=&quot;#入门&quot; class=&quot;headerlink&quot; title=&quot;入门&quot;&gt;&lt;/a&gt;入门&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://item.jd.com/11332506.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《Head First HTML与CSS》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://item.jd.com/11019625.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《锋利的jQuery》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;chrome Devtools&lt;/a&gt;: 先学会简单的查看元素，源码调试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;学了这些基本上做些简单网站是没问题了，有点开发体验之后想要在前端继续发展下去，要注重知识体系和基础了&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://zhanghw.win/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="资料" scheme="http://zhanghw.win/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>Grid布局与Flex布局</title>
    <link href="http://zhanghw.win/2018/05/03/Grid%E5%B8%83%E5%B1%80%E4%B8%8EFlex%E5%B8%83%E5%B1%80/"/>
    <id>http://zhanghw.win/2018/05/03/Grid布局与Flex布局/</id>
    <published>2018-05-03T11:01:04.000Z</published>
    <updated>2019-05-01T07:15:17.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于flex布局"><a href="#关于flex布局" class="headerlink" title="关于flex布局"></a>关于flex布局</h2><ol><li>概念<br> flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。布局的传统解决方案，基于盒状模型，依赖<code>display</code>属性 + <code>position</code>属性 + <code>float</code>属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。在没有兼容性问题的情况下，flex布局是一个很好的解决方案。<a id="more"></a></li><li>兼容性<br><img src="/uploads/20180503192950.png" alt=""><br>基本上ie10就开始支持了，因此可以很安全的使用这项功能。</li><li>语法<br>这里推荐阮一峰的博客<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">Flex 布局教程：语法篇</a>，看几遍基本会了。</li></ol><h2 id="关于grid布局"><a href="#关于grid布局" class="headerlink" title="关于grid布局"></a>关于grid布局</h2><ol><li>概念<br> grid是一个二维的基于网格的布局系统，目的是为了完全改变我们基于网格设计用户界面的方式，通过将CSS规则应用于父元素(成为Grid Container网格容器)和其子元素(成为Grid Items网格项)，你就可以轻松使用Grid(网格)布局。</li><li>兼容性<br><img src="/uploads/20180503194845.png" alt=""><br>ie11虽然支持，但是是一个过时的语法实现。gird的支持性没有flex好，但也只是时间问题。</li><li>语法<br>入门推荐<a href="http://www.css88.com/archives/8506" target="_blank" rel="noopener">5分钟学会 CSS Grid 布局</a>，详细的教程参见<a href="http://www.css88.com/archives/8510" target="_blank" rel="noopener">CSS Grid 布局完全指南</a></li></ol><h2 id="flex-VS-grid"><a href="#flex-VS-grid" class="headerlink" title="flex VS grid"></a>flex VS grid</h2><ol><li>grids 适用于布局大画面。它们使页面的布局变得非常容易，甚至可以处理一些不规则和非对称的设计</li><li>flexbox 非常适合对齐元素内的内容。你可以使用 Flex 来定位设计上一些较小的细节</li><li>flex一维布局(行或列)；grid二维布局(行和列)</li><li>共同学习和使用更加轻松</li></ol><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p><strong>强力</strong>推荐学习flex和grid的小游戏: </p><ul><li><a href="http://flexboxfroggy.com/" target="_blank" rel="noopener">flex小青蛙</a> </li><li><a href="http://cssgridgarden.com/" target="_blank" rel="noopener">grid花园</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于flex布局&quot;&gt;&lt;a href=&quot;#关于flex布局&quot; class=&quot;headerlink&quot; title=&quot;关于flex布局&quot;&gt;&lt;/a&gt;关于flex布局&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;概念&lt;br&gt; flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。布局的传统解决方案，基于盒状模型，依赖&lt;code&gt;display&lt;/code&gt;属性 + &lt;code&gt;position&lt;/code&gt;属性 + &lt;code&gt;float&lt;/code&gt;属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。在没有兼容性问题的情况下，flex布局是一个很好的解决方案。
    
    </summary>
    
      <category term="css" scheme="http://zhanghw.win/categories/css/"/>
    
    
      <category term="css布局" scheme="http://zhanghw.win/tags/css%E5%B8%83%E5%B1%80/"/>
    
      <category term="flex" scheme="http://zhanghw.win/tags/flex/"/>
    
      <category term="grid" scheme="http://zhanghw.win/tags/grid/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式高级用法</title>
    <link href="http://zhanghw.win/2018/04/26/JavaScript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>http://zhanghw.win/2018/04/26/JavaScript正则表达式高级用法/</id>
    <published>2018-04-26T15:14:38.000Z</published>
    <updated>2019-05-01T07:15:17.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="贪婪和惰性匹配"><a href="#贪婪和惰性匹配" class="headerlink" title="贪婪和惰性匹配"></a>贪婪和惰性匹配</h2><ol><li><p>贪婪匹配</p><p> <strong>表示方法</strong>：简单量词都是贪婪匹配。（? , * , +）</p> <a id="more"></a><p> <strong>描述</strong>：贪婪匹配是先匹配整个字符串，匹配原则类似在正则表达式末尾加上$。如果匹配失败，则去掉最末位，重新进行上一个操作。直到匹配成功（这里需要进行最大量匹配，比如说/.*aa/，则会匹配到aa之前的所有字符，而不仅仅是aa之前第一个），如果是全局匹配，匹配成功之后还可以在此基础上继续进行匹配操作，或者是匹配失败。</p></li><li><p>惰性匹配</p><p> <strong>表示方法</strong>：在量词后面添加’?’。（?? , *? , +?）</p><p> <strong>描述</strong>：惰性匹配与贪婪匹配正好相反，是从左往右进行匹配。先匹配第一个字符（匹配方式与上面贪婪匹配一样，在正则表达式后面添加$），如果第一个数据匹配失败，则新添加一个字符。直到匹配成功，如果是全局匹配，匹配成功之后还可以在此基础上继续进行匹配操作。</p></li></ol><h2 id="非捕获性分组和零宽断言"><a href="#非捕获性分组和零宽断言" class="headerlink" title="非捕获性分组和零宽断言"></a>非捕获性分组和零宽断言</h2><p>&emsp;&emsp;<strong>非捕获性分组</strong>: 并不是所有分组都能创建反向引用，有一种特别的分组称之为非捕获性分组，它是不会创建反向引用。反之，就是捕获性分组。语法：<code>(?:exp)</code></p><p>&emsp;&emsp;<strong>零宽断言(前瞻、后瞻)</strong></p><table><thead><tr><th>正则</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>(?=exp)</td><td>正向前瞻</td><td>匹配exp前面的位置</td></tr><tr><td>(?!exp)</td><td>负向前瞻</td><td>匹配后面不是exp的位置</td></tr><tr><td>(?&lt;=exp)</td><td>正向后瞻</td><td>匹配exp后面的位置 <strong>不支持</strong></td></tr><tr><td>(?&lt;!exp)</td><td>负向后瞻</td><td>匹配前面不是exp的位置 <strong>不支持</strong></td></tr></tbody></table><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://www.cnblogs.com/zera/archive/2013/01/14/2860121.html" target="_blank" rel="noopener">js中贪婪和惰性匹配</a></li><li><a href="https://www.cnblogs.com/rubylouvre/archive/2010/03/09/1681222.html" target="_blank" rel="noopener">javascript正则表达式-司徒正美</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;贪婪和惰性匹配&quot;&gt;&lt;a href=&quot;#贪婪和惰性匹配&quot; class=&quot;headerlink&quot; title=&quot;贪婪和惰性匹配&quot;&gt;&lt;/a&gt;贪婪和惰性匹配&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;贪婪匹配&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;表示方法&lt;/strong&gt;：简单量词都是贪婪匹配。（? , * , +）&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://zhanghw.win/categories/JavaScript/"/>
    
    
      <category term="正则表达式" scheme="http://zhanghw.win/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>搭建Hexo+Github Pages博客教程</title>
    <link href="http://zhanghw.win/2018/04/07/%E6%90%AD%E5%BB%BAhexo-Github-Page%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>http://zhanghw.win/2018/04/07/搭建hexo-Github-Page博客教程/</id>
    <published>2018-04-07T14:03:46.000Z</published>
    <updated>2019-05-01T07:15:17.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;Hexo 是一个快速、简洁且高效的博客框架，支持Markdown。Hexo基于Node.js，有完善的中文文档、丰富的主题、方便集成第三方服务等优点，使得我放弃了<a href="http://jekyllcn.com/" target="_blank" rel="noopener">jekyll</a>转向Hexo。<br>&emsp;&emsp;GitHub Pages 是GitHub推出的免费的静态页面托管服务，重点是<strong>免费</strong>的，另外对于经常使用git和GitHub的程序员来说几乎无门槛。<br>&emsp;&emsp;简单介绍一下，具体大家可以百度，下面介绍如何一步一步搭建博客。<br><a id="more"></a></p><h2 id="新建username-github-io仓库"><a href="#新建username-github-io仓库" class="headerlink" title="新建username.github.io仓库"></a>新建username.github.io仓库</h2><p>&emsp;&emsp;这里跟在GitHub新建一个仓库是一样的，只是名字为username.github.io，其中username替换为自己的名字即可。这样的一个仓库Github会自动识别为GitHub Pages，而且每个GitHub用户最多能建立一个。</p><h2 id="安装Hexo并初始化博客"><a href="#安装Hexo并初始化博客" class="headerlink" title="安装Hexo并初始化博客"></a>安装Hexo并初始化博客</h2><blockquote><p>前提是已经是安装了Node.js和Git</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>这样本地就启动了hexo服务器。访问<code>http://localhost:4000/</code>就可以看到首页</p><h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改站点配置文件<code>_config.yml</code></p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">&lt;GitHub</span> <span class="string">Pages</span> <span class="string">url&gt;</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>生成静态文件并部署</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure><p> 上面的命令可以简写为</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></li></ol><p>这样你本地生成的静态文件就推送到了github仓库了，此时访问<code>https://username.github.io</code>就可以看到你的博客了</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><ol><li>获取github pages的ip地址<br><img src="/uploads/20180408141644.png" alt=""></li><li>添加域名解析<br>此步大家在自己购买的域名管理网站中配置即可。我购买的是阿里云域名，使用DNSPod提供的免费域名解析服务</li><li>配置github pages的custom<br><img src="/uploads/20180408142529.png" alt=""></li><li>添加CNAME<br>在本地博客的source目录下添加CNAME文件，内容为域名。</li></ol><p>现在使用上面的命令重新生成静态文件并部署，就可以用域名访问你的博客啦</p><h2 id="集成NexT主题"><a href="#集成NexT主题" class="headerlink" title="集成NexT主题"></a>集成NexT主题</h2><p>大家参照<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">官方文档</a>配置即可</p><h2 id="腾讯公益404页面"><a href="#腾讯公益404页面" class="headerlink" title="腾讯公益404页面"></a>腾讯公益404页面</h2><p>参照<a href="http://theme-next.iissnan.com/theme-settings.html#volunteer-404" target="_blank" rel="noopener">官方文档</a>，注意的是这个在本地只能通过<code>http://localhost:4000/404.html</code>来访问，只有部署到服务器上才有404的效果</p><h2 id="集成评论系统"><a href="#集成评论系统" class="headerlink" title="集成评论系统"></a>集成评论系统</h2><p>&emsp;&emsp;多说已经下线了，网易云跟帖、畅言使用不太方便，风格与NexT主题不符，Disqus是国外的经常被墙。这里我选择的是Valine配合LeanCloud使用<br>&emsp;&emsp;<strong><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 是一款基于<a href="https://leancloud.cn/" target="_blank" rel="noopener">Leancloud</a>的快速、简洁且高效的无后端评论系统</strong>。而且NexT主题已经集成了Valine的配置，使用起来非常方便</p><ol><li><p>配置LeanCloud<br>请先登录或注册LeanCloud，进入控制台后点击左上角的创建新应用<br><img src="/uploads/20180408145009.png" alt=""><br>创建好了后进入应用，点击左下角设置 &gt; 应用Key，就可以看到appid和appkey了<br><img src="/uploads/2.png" alt=""></p> <div class="note warning"><p><strong>为了你的数据安全，请设置自己的安全域名</strong><br><img src="/uploads/20180408154027.png" alt=""></p></div></li><li><p>主题配置文件开启Valine<br><img src="/uploads/20180408145611.png" alt=""></p></li></ol><p>还可以设置头像和邮件提醒，请参考<a href="https://valine.js.org/quickstart/" target="_blank" rel="noopener">官方文档</a></p><h2 id="集成数据统计"><a href="#集成数据统计" class="headerlink" title="集成数据统计"></a>集成数据统计</h2><p>我这里使用的是LeanCloud来实现文章阅读量统计功能，参见<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">为NexT主题添加文章阅读量统计功能</a></p><h2 id="集成内容分享服务"><a href="#集成内容分享服务" class="headerlink" title="集成内容分享服务"></a>集成内容分享服务</h2><p>我这里使用的是百度分享</p><ol><li><p>编辑站点配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># share</span></span><br><span class="line"><span class="attr">baidushare:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>编辑主题配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Share</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    button | slide</span></span><br><span class="line"><span class="comment"># Warning: Baidu Share does not support https.</span></span><br><span class="line"><span class="attr">baidushare:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">button</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="集成搜索服务"><a href="#集成搜索服务" class="headerlink" title="集成搜索服务"></a>集成搜索服务</h2><p>&emsp;&emsp;我这里使用的是local search，参见<a href="http://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="noopener">NexT官方文档</a><br>&emsp;&emsp;我这里踩了一个<strong>坑</strong>：当我配置完后在博客首页里点击搜索就一直转圈，打开F12开发者工具，看到了正常请求search.xml，点击Preview发现了parse error。一直困扰了许久，后来在<a href="https://www.v2ex.com/amp/t/298727" target="_blank" rel="noopener">这里</a>找到了答案，原来是我的有篇博客里有不可见的特殊字符，我用正则表达式全局搜索了<code>\x08</code>找到了那个地方，修改了之后搜索功能就好了</p><h2 id="给Front-Matter增加notoc配置"><a href="#给Front-Matter增加notoc配置" class="headerlink" title="给Front-Matter增加notoc配置"></a>给Front-Matter增加notoc配置</h2><p>&emsp;&emsp;如果开启了toc，默认所有的文章都会生成文章目录，想实现指定文章禁用目录的功能，比如关于页面，需要自己手动修改一下模板。<br>&emsp;&emsp;找到主题下的sidebar.swig文件，将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set display_toc = is_post and theme.toc.enable or is_page and theme.toc.enable %&#125;</span><br></pre></td></tr></table></figure><p>这一句改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set display_toc = is_post and theme.toc.enable and !page.notoc or is_page and theme.toc.enable and !page.notoc %&#125;</span><br></pre></td></tr></table></figure><p>如果需要禁用目录，在对应的Front-Matter部分添加一个notoc: true就行了。</p><h2 id="侧边栏头像旋转"><a href="#侧边栏头像旋转" class="headerlink" title="侧边栏头像旋转"></a>侧边栏头像旋转</h2><p>打开<code>/themes/next/source/css/_common/components/sidebar/sidebar-author.styl</code>，修改代码如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">$site</span>-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="variable">$site</span>-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$site</span>-author-image-height;</span><br><span class="line">  <span class="comment">/* border: $site-author-image-border-width solid $site-author-image-border-color; */</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span></span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">1.4s</span> all;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    <span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更改favicon"><a href="#更改favicon" class="headerlink" title="更改favicon"></a>更改favicon</h2><p>更改站点配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To get or check favicons visit: https://realfavicongenerator.net</span></span><br><span class="line"><span class="comment"># Put your favicons into `hexo-site/source/` (recommend) or `hexo-site/themes/next/source/images/` directory.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default NexT favicons placed in `hexo-site/themes/next/source/images/` directory.</span></span><br><span class="line"><span class="comment"># And if you want to place your icons in `hexo-site/source/` root directory, you must remove `/images` prefix from pathes.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For example, you put your favicons into `hexo-site/source/images` directory.</span></span><br><span class="line"><span class="comment"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">  small:</span> <span class="string">/favicon-16x16.png</span></span><br><span class="line"><span class="attr">  medium:</span> <span class="string">/favicon-32x32.png</span></span><br><span class="line"><span class="attr">  apple_touch_icon:</span> <span class="string">/apple-touch-icon.png</span></span><br><span class="line"><span class="attr">  safari_pinned_tab:</span> <span class="string">/logo.svg</span></span><br><span class="line"><span class="attr">  android_manifest:</span> <span class="string">/site.webmanifest</span></span><br><span class="line"><span class="attr">  ms_browserconfig:</span> <span class="string">/browserconfig.xml</span></span><br></pre></td></tr></table></figure><p>强烈推荐一个生成各种格式的favicon的在线工具：<a href="https://realfavicongenerator.net/" target="_blank" rel="noopener">https://realfavicongenerator.net/</a></p><h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><ul><li><a href="https://blog.csdn.net/u011475210/article/details/79023429" target="_blank" rel="noopener">我的个人博客之旅：从jekyll到hexo</a></li><li><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages官网</a></li><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo官网</a></li><li><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT官网</a></li><li><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine —— 一款快速、简洁且高效的无后端评论系统</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Hexo 是一个快速、简洁且高效的博客框架，支持Markdown。Hexo基于Node.js，有完善的中文文档、丰富的主题、方便集成第三方服务等优点，使得我放弃了&lt;a href=&quot;http://jekyllcn.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jekyll&lt;/a&gt;转向Hexo。&lt;br&gt;&amp;emsp;&amp;emsp;GitHub Pages 是GitHub推出的免费的静态页面托管服务，重点是&lt;strong&gt;免费&lt;/strong&gt;的，另外对于经常使用git和GitHub的程序员来说几乎无门槛。&lt;br&gt;&amp;emsp;&amp;emsp;简单介绍一下，具体大家可以百度，下面介绍如何一步一步搭建博客。&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://zhanghw.win/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://zhanghw.win/tags/hexo/"/>
    
      <category term="Github Page" scheme="http://zhanghw.win/tags/Github-Page/"/>
    
  </entry>
  
  <entry>
    <title>nvm使用总结</title>
    <link href="http://zhanghw.win/2018/04/07/nvm/"/>
    <id>http://zhanghw.win/2018/04/07/nvm/</id>
    <published>2018-04-07T12:43:03.000Z</published>
    <updated>2019-05-01T07:15:17.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是nvm"><a href="#什么是nvm" class="headerlink" title="什么是nvm"></a>什么是nvm</h2><p>全称nodejs版本管理工具（Node Version Manager）。它能够让你在一台机器上安装和切换不同版本的node。<br><a id="more"></a></p><h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><p>通过cURL或者Wget使用<a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="noopener">install script</a>安装</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ul><li><code>nvm install &lt;node版本号&gt;</code>: 安装node</li><li><code>nvm use &lt;node版本号&gt;</code>: 使用指定版本node</li><li><code>nvm ls</code>: 查看当前本机安装的所有node</li><li><code>nvm uninstall &lt;node版本号&gt;</code>: 卸载node</li><li><code>nvm current</code>: 查看当前使用的node版本</li></ul><h2 id="干货"><a href="#干货" class="headerlink" title="干货"></a>干货</h2><ul><li>安装新的node版本并迁移所安装的全局npm包，请使用命令<br><code>nvm install &lt;node新版本号&gt; --reinstall-packages-from=&lt;node旧版本号&gt;</code></li><li>单独升级npm版本，直接使用<code>npm install -g npm</code>即可，跟nvm无关</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">github官网</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是nvm&quot;&gt;&lt;a href=&quot;#什么是nvm&quot; class=&quot;headerlink&quot; title=&quot;什么是nvm&quot;&gt;&lt;/a&gt;什么是nvm&lt;/h2&gt;&lt;p&gt;全称nodejs版本管理工具（Node Version Manager）。它能够让你在一台机器上安装和切换不同版本的node。&lt;br&gt;
    
    </summary>
    
      <category term="nodejs" scheme="http://zhanghw.win/categories/nodejs/"/>
    
    
      <category term="nvm" scheme="http://zhanghw.win/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>git使用总结</title>
    <link href="http://zhanghw.win/2018/04/07/git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://zhanghw.win/2018/04/07/git使用总结/</id>
    <published>2018-04-07T03:06:24.000Z</published>
    <updated>2019-05-01T07:15:17.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h2><ol><li><p>文件的三种状态：</p><ul><li>已修改（modified）</li><li>已暂存（staged）</li><li>已提交（committed）<a id="more"></a></li></ul></li><li><p>三个区域：</p><ul><li>工作区:电脑中能看到的目录</li><li>暂存区:一般是一个文件，放在.git目录中</li><li>版本库:又叫本地仓库，一般在工作区的隐藏的.git目录</li></ul></li><li>已跟踪与未跟踪<br> 工作区的文件分为已跟踪文件与未跟踪文件，只有已跟踪文件才会进入到git的生命周期中，才具有上面所述的三种状态；未跟踪文件的操作与git无关</li></ol><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>全局配置：<code>git config --global</code>，在<code>/etc/gitconfig</code>(所有用户)和<code>~/.gitconfig</code>(当前用户)文件中</p><p>当前工作区配置：<code>git config</code>，在<code>.git/config</code>文件中</p><p>常用命令:(以当前工作区配置为例)</p><ul><li><code>git config -l</code>: 显示所有配置</li><li><code>git config &lt;属性名&gt; &lt;属性值&gt;</code></li><li><code>git config --global alias.&lt;自定义名称&gt; &lt;命令名称&gt;</code></li></ul><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><p><code>git help &lt;命令&gt;</code></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ul><li><code>git init</code>:初始化本地仓库</li><li><code>git clone &lt;远程仓库地址&gt;</code>:从远程服务器上克隆</li></ul><h2 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h2><ul><li><code>git status</code>:查看状态</li></ul><h2 id="跟踪文件"><a href="#跟踪文件" class="headerlink" title="跟踪文件"></a>跟踪文件</h2><ul><li><code>git add</code>:跟踪修改或新增的文件；把已跟踪的文件放到暂存区</li><li><code>git add .</code>: 跟踪所有修改和添加的文件，不包括删除</li><li><code>git add -u</code>:跟踪所有已跟踪的文件，包括修改和删除，不包括添加</li><li><code>git add -A</code>:跟踪所有，包括添加、修改和删除</li></ul><h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p><code>.gitignore</code>文件: 忽略的文件列表，规则如下:</p><ul><li><code>#</code>开头的行表示注释</li><li>支持标准的glob模式</li><li><code>!</code>表示取反，忽略指定模式以外的文件或目录</li></ul><blockquote><p>注意：对于已经提交到版本库的文件，添加<code>.gitignore</code>规则并不能生效，需要先从版本库中删除文件（如何删除，参见<a href="#section-delete">删除文件</a>一节），再添加。</p></blockquote><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><ul><li><code>git commit</code></li><li><code>git commit -m &lt;注释&gt;</code></li><li><code>git commit -a</code>：暂存修改并提交（不包括添加和删除）</li></ul><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><ul><li><code>git diff</code>:比较工作区与暂存区的差异，即已修改但未暂存的内容</li><li><code>git diff --cached</code>:比较暂存区与上一次提交版本的差异</li></ul><p><span id="section-delete"></span></p><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><ul><li><code>git rm</code>:删除文件，后面加上git commit提交就从版本库中删除了，仅仅手工删除文件再提交并不会从影响版本库</li><li><code>git rm -f</code>:如果文件已经在暂存区中，想删除就得加上<code>-f</code></li><li><code>git rm --cached</code>:仅从版本库中删除，工作区中不删除，同样加上git commit才生效</li></ul><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><ul><li><code>git mv &lt;原始文件名&gt; &lt;新文件名&gt;</code>:git的移动（重命名）文件相当于删除旧文件，添加新文件</li></ul><h2 id="查看提交纪录"><a href="#查看提交纪录" class="headerlink" title="查看提交纪录"></a>查看提交纪录</h2><ul><li><code>git log [&lt;file&gt;]</code>: 查看所有（或者指定文件）的提交记录</li><li><code>git log -&lt;数字&gt;</code>: 查看最近几次(指定数字)提交纪录</li><li><code>git log --pretty=oneline|short|full|fuller|format(后跟指定格式)</code>: 日志指定格式输出</li></ul><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><ul><li><code>git commit --amend</code>: 修改最后一次提交</li><li><code>git reset HEAD &lt;file&gt;</code>: 取消已经暂存的文件</li><li><code>git checkout -- &lt;file&gt;</code>: 取消对文件的修改(已修改，未暂存)</li><li><code>git clean -n</code>: git clean 操作用来删除工作目录中所有没有tracked过的文件。<code>-n</code>显示哪些文件会被删除，但并没有真正删除</li><li><code>git clean -f &lt;path&gt;</code>: 删除当前目录(或者指定目录)下所有没有track过的文件，注意不会删除.gitignore文件里面指定的文件夹和文件</li><li><code>git clean -df</code>: 删除当前目录下没有被track过的文件和文件夹</li></ul><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><ul><li><code>git remote</code>: 查看当前的远程库</li><li><code>git remote -v</code>: 查看当前的远程库，显示URL</li><li><code>git remote add &lt;远程仓库简称&gt; &lt;URL&gt;</code>: 添加远程仓库</li><li><code>git remote show &lt;远程仓库简称&gt;</code>: 查看远程仓库信息</li><li><code>git remote rename &lt;远程仓库旧简称&gt; &lt;远程仓库新简称&gt;</code>: 重命名远程仓库</li><li><code>git remote rm &lt;远程仓库简称&gt;</code>: 取消对应远程仓库的关联</li></ul><blockquote><p>git clone操作会自动使用默认的 master 和 origin 名字</p></blockquote><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><ul><li><code>git tag</code>: 列出所有标签</li><li><code>git tag -l &lt;glob&gt;</code>: 按照特定的模式搜索标签</li><li><code>git tag -a &lt;标签名&gt; -m &lt;注释&gt;</code>: 含附注的标签</li><li><code>git show &lt;标签名&gt;</code>: 查看标签信息</li><li><code>git tag &lt;标签名&gt;</code>: 轻量级标签</li><li><code>git tag -a &lt;标签名&gt; &lt;某次提交的校验和&gt;</code>: 后期加注轻量级标签</li><li><code>git push &lt;远程仓库简称&gt; &lt;标签名&gt;</code>: 推送标签</li><li><code>git push &lt;远程仓库简称&gt; --tags</code>: 推送所有标签</li></ul><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ul><li><code>git branch</code>: 列出所有分支（前面有＊号的是当前分支）</li><li><code>git branch -a</code>: 列出所有分支，包括隐藏的远程本地分支</li><li><code>git branch -v</code>: 列出所有分支，以及每个分支最后一个提交信息</li><li><code>git branch --merged</code>: 列出已经合并到当前分支的分支</li><li><code>git branch --no-merged</code>: 列出尚未合并到当前分支的分支</li><li><code>git branch -d &lt;分支名称&gt;</code>: 删除分支</li><li><code>git branch &lt;分支名称&gt;</code>: 新建分支</li><li><code>git checkout &lt;分支名称&gt;</code>: 切换分支</li><li><code>git checkout -b &lt;分支名称&gt;</code>: 新建分支并切换到该分支</li><li><code>git merge &lt;分支名称&gt;</code>: 合并分支到当前分支,默认将尽可能采用fast forword模式，将不显示分支信息，以后分支删掉的话提交历史树将看不到该分支，可以加<code>--no-ff</code>保存分支历史，方便以后查看</li></ul><blockquote><p>合并遇到冲突时，git status可以查看冲突的文件，打开文件可以看到冲突地方有标记，手工修改并去掉冲突标记，然后git add并git commit就可以合并了</p></blockquote><ul><li><code>git mergetool [&lt;工具名&gt;]</code>: 使用特定的可视化合并工具（默认mac上使用opendiff）</li></ul><h2 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h2><ul><li><code>git branch -r</code>: 查看远程分支</li><li><code>git branch -vv</code>: 列出所有分支，以及每个分支关联的远程分支和最后一个提交信息</li><li><code>git branch --set-upstream &lt;本地分支名&gt; &lt;远程仓库简称&gt;/&lt;远程分支名&gt;</code>: 指定远程关联分支</li><li><code>git fetch &lt;远程仓库简称&gt;</code>: 从远程仓库抓取数据，包括所有分支，不合并到本地仓库</li><li><code>git fetch -p</code>: 除了拉取分支，而且会在本地删除远程已经删除的分支</li><li><code>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>: 取回远程主机某个分支的更新，再与本地的指定分支合并</li><li><code>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;</code>: 取回远程主机某个分支的更新，再与本地的<strong>当前</strong>分支合并</li><li><code>git pull &lt;远程主机名&gt;</code>: 省略远程分支名,前提是已经建立了”追踪关系”</li><li><code>git pull</code>: 如果当前分支只有一个关联主机，则可以省略主机名</li><li><code>git pull --rebase</code>: 采用rebase方式合并</li><li><code>git push &lt;远程仓库简称&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</code>: 推送本地分支</li><li><code>git push &lt;远程仓库简称&gt; &lt;本地分支名&gt;</code>: 将本地分支推送与之存在”追踪关系”的远程分支(通常两者同名)，如果该远程分支不存在，则会被新建</li><li><code>git push &lt;远程仓库简称&gt;</code>: 推送当前分支到远程对应分支，前提是已经建立了”追踪关系”</li><li><code>git push</code>: 如果当前分支只有一个关联主机，则可以省略主机名</li><li><code>git push -u &lt;远程仓库简称&gt; &lt;本地分支名&gt;</code>: -u指定默认主机，以后可以直接使用<code>git push</code></li><li><code>git checkout -b &lt;分支名称&gt; &lt;远程仓库简称&gt;/&lt;远程分支名&gt;</code>: 建立本地分支，并跟踪对应远程分支</li><li><code>git checkout --track &lt;远程仓库简称&gt;/&lt;远程分支名&gt;</code>: 同上</li><li><code>git push &lt;远程仓库简称&gt; :&lt;分支名称&gt;</code>: 删除远程分支</li><li><code>git push -f</code>: 如果远程主机的版本比本地版本更新，推送时Git会报错，要求先在本地做git pull合并差异，然后再推送到远程主机。这时，如果你一定要推送，可以使用<code>-f</code>选项,结果导致在远程主机产生一个non-fast-forward的合并</li><li><code>git rebase &lt;主分支&gt; &lt;特性分支&gt;</code>: 先取出特性分支，然后在主分支上重演</li><li><code>git rebase &lt;主分支&gt;</code>: 先取出当前分支，然后在主分支上重演</li></ul><h2 id="储藏"><a href="#储藏" class="headerlink" title="储藏"></a>储藏</h2><ul><li><code>git stash</code>: 储藏修改过的被追踪的文件和放在暂存区的变更</li><li><code>git stash list</code>: 查看现有的储藏</li><li><code>git stash apply</code>: 恢复最新的储藏</li><li><code>git stash apply &lt;储藏名称&gt;</code>: 恢复指定的储藏</li><li><code>git stash drop</code>: 删除最新的储藏</li><li><code>git stash drop &lt;储藏名称&gt;</code>: 删除指定的储藏</li><li><code>git stash pop &lt;储藏名称&gt;</code>: 恢复指定的储藏并删除</li></ul><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><ul><li><code>git reset --hard &lt;HEAD^|HEAD^^|commit id&gt;</code>: 回退到特定版本</li><li><code>git reset &lt;HEAD^|HEAD^^|commit id&gt;</code>: 回滚到特定版本。将这个版本之后的所有变更移动到“未暂存”的阶段，可用于改变提交顺序</li><li><code>git reset --soft &lt;HEAD^|HEAD^^|commit id&gt;</code>: 回滚到特定版本,将这次提交之后所有的变更移动到暂存并准备提交阶段，可用于合并提交</li></ul><h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><ul><li><p><code>git archive --format zip -o site-$(git log --pretty=format:&quot;%h&quot; -1).zip HEAD</code>: 导出最新版本</p></li><li><p><code>git archive v1.0 | gzip &gt; xxxx.tgz</code>: 导出tag</p></li></ul><h2 id="子模块"><a href="#子模块" class="headerlink" title="子模块"></a>子模块</h2><ul><li><code>git submodule add &lt;远程仓库地址&gt; &lt;本地路径&gt;</code>: 添加子模块，可以指定路径或者修改文件夹名称</li><li><code>git clone --recursive &lt;远程仓库地址&gt;</code>: 克隆带有子模块的仓库</li><li><code>git submodule update --init --recursive</code>: 已经git clone下来的工程，初始化所有submodule</li><li><code>git submodule update --recursive</code>: 更新submodule,有嵌套的submodule时加recursive参数</li></ul><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><ul><li><code>git reflog</code>: 查看每一次git命令</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://git.oschina.net/progit/" target="_blank" rel="noopener">Pro Git（中文版）</a></li><li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程－廖雪峰</a></li><li><a href="http://blog.csdn.net/sgnoquiter/article/details/50385389" target="_blank" rel="noopener">日常使用 Git 的 19 个建议</a></li><li><a href="http://blog.csdn.net/kangear/article/details/13169395" target="_blank" rel="noopener">Git深度使用经验总结</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一些概念&quot;&gt;&lt;a href=&quot;#一些概念&quot; class=&quot;headerlink&quot; title=&quot;一些概念&quot;&gt;&lt;/a&gt;一些概念&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;文件的三种状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已修改（modified）&lt;/li&gt;
&lt;li&gt;已暂存（staged）&lt;/li&gt;
&lt;li&gt;已提交（committed）
    
    </summary>
    
      <category term="开发工具" scheme="http://zhanghw.win/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="http://zhanghw.win/tags/git/"/>
    
  </entry>
  
</feed>
